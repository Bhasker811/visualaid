import speech_recognition as sr
import requests
from datetime import datetime
import time

# üîê Your NewsAPI key goes here
API_KEY = "1cb0565a3bcc4d7fb10d08075d5b79b7"

# PART 1: Listen for voice command
def listen_for_command(trigger_phrase="today's news", max_attempts=5):
    recognizer = sr.Recognizer()
    mic = sr.Microphone()

    print("üé§ Listening for the command...")

    attempts = 0

    while attempts < max_attempts:
        try:
            with mic as source:
                recognizer.adjust_for_ambient_noise(source)
                print(f"Attempt {attempts + 1}... Please say something.")
                audio = recognizer.listen(source, timeout=5)

            print("üß† Recognizing speech...")
            command = recognizer.recognize_google(audio).lower()
            print(f"üó£ You said: {command}")

            if trigger_phrase in command:
                print("‚úÖ Trigger phrase detected: 'today's news'")
                return True
            else:
                print("‚ùå Trigger phrase not detected.")
                attempts += 1

        except sr.UnknownValueError:
            print("‚ùó Could not understand the audio. Please try again.")
            attempts += 1
        except sr.RequestError as e:
            print(f"‚ö† API error: {e}")
            attempts += 1
        except Exception as e:
            print(f"‚ùå Unexpected error: {e}")
            attempts += 1

        if attempts < max_attempts:
            print("üîÅ Waiting before next attempt...\n")
            time.sleep(2)

    print(f"‚ö† Max attempts ({max_attempts}) reached. Exiting...")
    return False


# PART 2: Fetch top 5 news
def fetch_top_news(api_key, country="in", limit=5):
    url = (
        f"https://newsapi.org/v2/top-headlines?"
        f"country={country}&pageSize={limit}&apiKey={api_key}"
    )

    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()

        if data.get("status") != "ok":
            print("‚ùå Failed to fetch news.")
            return []

        articles = data.get("articles", [])
        print(f"\nüì∞ Top {limit} News for {datetime.now().strftime('%Y-%m-%d')}:\n")
        news_list = []

        for i, article in enumerate(articles, start=1):
            title = article.get("title", "No Title")
            description = article.get("description", "No Description")
            print(f"{i}. {title}\n   {description}\n")
            news_list.append({"title": title, "description": description})

        return news_list

    except Exception as e:
        print(f"‚ö† Error fetching news: {e}")
        return []


# üöÄ Main Flow
if __name__ == "_main_":
    if listen_for_command():
        print(">> Fetching today's top 5 news...")
        news = fetch_top_news(API_KEY)
        if news:
            print("‚úÖ News fetched successfully!")
        else:
            print("‚ö† No news fetched.")
    else:
        print("‚ùå Trigger phrase not detected. Exiting.")